"use strict";function mydef(x,y){return"function"!=typeof define?require("amdefine")(module)(x,y):define(x,y)}mydef([],function(){return{fc_solve_expand_move:function(num_stacks,num_freecells,initial_src_state_str,initial_move,initial_dest_state_str){var matched=initial_move.str.match(/^Move ([0-9]+) cards from stack ([0-9]+) to stack ([0-9]+)$/);if(!matched)return[initial_move];function to_int(s){return parseInt(s,10)}var ultimate_num_cards=to_int(matched[1]);if(1==ultimate_num_cards)return[initial_move];var ultimate_source=to_int(matched[2]),ultimate_dest=to_int(matched[3]),empty_fc_indexes=[],empty_stack_indexes=[],modified_state={f:[],c:[]},freecell_match=initial_src_state_str.match(/\nFreecells:([^\n]*)\n/);if(!freecell_match)throw"Cannot match freecell exception.";var freecell_string=freecell_match[1];if(freecell_string.length!=4*num_freecells)throw"Miscount of freecells.";for(var idx=0;idx<num_freecells;++idx){var fc_s=freecell_string.substring(4*idx,4*(idx+1));"    "==fc_s?(modified_state.f[idx]=null,empty_fc_indexes.push(idx)):modified_state.f[idx]={t:"s",s:fc_s}}var col_matches=initial_src_state_str.match(/(\n:[^\n]+)/g);if(!col_matches||col_matches.length!=num_stacks)throw"Miscount of stacks.";for(var _idx=0;_idx<num_stacks;++_idx){var cards=col_matches[_idx].match(/\w{2}/g);cards||(cards=[]),modified_state.c[_idx]=cards,_idx!=ultimate_dest&&_idx!=ultimate_source&&0==cards.length&&empty_stack_indexes.push(_idx)}var foundations_match=initial_src_state_str.match(/^(Foundations:[^\n]*\n)/);if(!foundations_match)throw"Cannot find foundations.";var foundations_str=foundations_match[1],num_cards_moved_at_each_stage=[],num_cards=0;num_cards_moved_at_each_stage.push(num_cards);for(var step_width=1+empty_fc_indexes.length;(num_cards=Math.min(num_cards+step_width,ultimate_num_cards))<ultimate_num_cards;)num_cards_moved_at_each_stage.push(num_cards);num_cards_moved_at_each_stage.push(num_cards);var ret_array=[],output_state_promise=function(){},past_first_output_state_promise=function(){var state_string=foundations_str+"Freecells:"+modified_state.f.map(function(fc){return fc?"s"==fc.t?fc.s:"  "+fc.c:"    "}).join("")+"\n"+modified_state.c.map(function(col){return": "+col.join(" ")+"\n"}).join("");ret_array.push({type:"s",str:state_string})};function add_move(my_move){output_state_promise(),ret_array.push({type:"m",str:function(my_move){var src=my_move.src.toString(),dest=my_move.dest.toString();return"s2f"==my_move.t?"Move a card from stack "+src+" to freecell "+dest:"s2s"==my_move.t?"Move 1 cards from stack "+src+" to stack "+dest:"Move a card from freecell "+src+" to stack "+dest}(my_move)}),function(my_move){var src=my_move.src,dest=my_move.dest;if("s2f"==my_move.t)modified_state.f[dest]={t:"c",c:modified_state.c[src].pop()};else if("s2s"==my_move.t)modified_state.c[dest].push(modified_state.c[src].pop());else{if("c"!=modified_state.f[src].t)throw"Wrong val in "+src+"Freecell.";modified_state.c[dest].push(modified_state.f[src].c),modified_state.f[src]=null}}(my_move),output_state_promise=past_first_output_state_promise}function _find_max_step(n){for(var x=1;x<<1<n;)x<<=1;return x}var _recursive_move=void 0;return(_recursive_move=function(source,dest,num_cards,empty_cols){if(!(num_cards<=0)){for(var running_empty_cols=empty_cols.slice(0),steps=[];Math.ceil(num_cards/step_width)>1;){var count_cards=_find_max_step(Math.ceil(num_cards/step_width))*step_width,temp_dest=running_empty_cols.shift();_recursive_move(source,temp_dest,count_cards,running_empty_cols),steps.push({source:source,dest:temp_dest,count:count_cards}),num_cards-=count_cards}return function(source,dest,count){for(var num_cards_thru_freecell=count-1,i=0;i<num_cards_thru_freecell;++i)add_move({t:"s2f",src:source,dest:empty_fc_indexes[i]});add_move({t:"s2s",src:source,dest:dest});for(var _i=num_cards_thru_freecell-1;_i>=0;--_i)add_move({t:"f2s",src:empty_fc_indexes[_i],dest:dest})}(source,dest,num_cards),void steps.reverse().forEach(function(s){_recursive_move(s.dest,dest,s.count,running_empty_cols),running_empty_cols.push(s.dest),running_empty_cols.sort(function(a,b){return a-b})})}})(ultimate_source,ultimate_dest,ultimate_num_cards,empty_stack_indexes),ret_array}}});